// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// binassignC
std::string binassignC(int pos, int posend, NumericVector y);
RcppExport SEXP _AlleleProfileR_binassignC(SEXP posSEXP, SEXP posendSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type pos(posSEXP);
    Rcpp::traits::input_parameter< int >::type posend(posendSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(binassignC(pos, posend, y));
    return rcpp_result_gen;
END_RCPP
}
// binassignChimericC
DataFrame binassignChimericC(DataFrame df, NumericVector y);
RcppExport SEXP _AlleleProfileR_binassignChimericC(SEXP dfSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(binassignChimericC(df, y));
    return rcpp_result_gen;
END_RCPP
}
// inssitesC
std::vector< std::string > inssitesC(std::string allele);
RcppExport SEXP _AlleleProfileR_inssitesC(SEXP alleleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type allele(alleleSEXP);
    rcpp_result_gen = Rcpp::wrap(inssitesC(allele));
    return rcpp_result_gen;
END_RCPP
}
// readposendC
IntegerVector readposendC(DataFrame df);
RcppExport SEXP _AlleleProfileR_readposendC(SEXP dfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    rcpp_result_gen = Rcpp::wrap(readposendC(df));
    return rcpp_result_gen;
END_RCPP
}
// seqinsertedC
std::string seqinsertedC(std::string seq, std::vector< std::string > cigarsubs, int cigarsubpos);
RcppExport SEXP _AlleleProfileR_seqinsertedC(SEXP seqSEXP, SEXP cigarsubsSEXP, SEXP cigarsubposSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< std::vector< std::string > >::type cigarsubs(cigarsubsSEXP);
    Rcpp::traits::input_parameter< int >::type cigarsubpos(cigarsubposSEXP);
    rcpp_result_gen = Rcpp::wrap(seqinsertedC(seq, cigarsubs, cigarsubpos));
    return rcpp_result_gen;
END_RCPP
}
// bamQCC
std::vector< bool > bamQCC(std::vector< std::int64_t > flag);
RcppExport SEXP _AlleleProfileR_bamQCC(SEXP flagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector< std::int64_t > >::type flag(flagSEXP);
    rcpp_result_gen = Rcpp::wrap(bamQCC(flag));
    return rcpp_result_gen;
END_RCPP
}
// mergedSanityCheckC
bool mergedSanityCheckC(DataFrame df);
RcppExport SEXP _AlleleProfileR_mergedSanityCheckC(SEXP dfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    rcpp_result_gen = Rcpp::wrap(mergedSanityCheckC(df));
    return rcpp_result_gen;
END_RCPP
}
// getreferenceC
std::string getreferenceC(std::string file, std::string chr, int lower, int upper);
RcppExport SEXP _AlleleProfileR_getreferenceC(SEXP fileSEXP, SEXP chrSEXP, SEXP lowerSEXP, SEXP upperSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type file(fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type chr(chrSEXP);
    Rcpp::traits::input_parameter< int >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< int >::type upper(upperSEXP);
    rcpp_result_gen = Rcpp::wrap(getreferenceC(file, chr, lower, upper));
    return rcpp_result_gen;
END_RCPP
}
// checkatgC
std::vector < int > checkatgC(DataFrame df, DataFrame gene);
RcppExport SEXP _AlleleProfileR_checkatgC(SEXP dfSEXP, SEXP geneSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type gene(geneSEXP);
    rcpp_result_gen = Rcpp::wrap(checkatgC(df, gene));
    return rcpp_result_gen;
END_RCPP
}
// checkstopC
std::vector < int > checkstopC(DataFrame df, DataFrame gene);
RcppExport SEXP _AlleleProfileR_checkstopC(SEXP dfSEXP, SEXP geneSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type gene(geneSEXP);
    rcpp_result_gen = Rcpp::wrap(checkstopC(df, gene));
    return rcpp_result_gen;
END_RCPP
}
// mutreferenceC
std::string mutreferenceC(DataFrame df, std::vector < std::string > cigarsubs, DataFrame gene, std::string index);
RcppExport SEXP _AlleleProfileR_mutreferenceC(SEXP dfSEXP, SEXP cigarsubsSEXP, SEXP geneSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< std::vector < std::string > >::type cigarsubs(cigarsubsSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type gene(geneSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(mutreferenceC(df, cigarsubs, gene, index));
    return rcpp_result_gen;
END_RCPP
}
// snpsC
List snpsC(DataFrame df, DataFrame gene, std::string index);
RcppExport SEXP _AlleleProfileR_snpsC(SEXP dfSEXP, SEXP geneSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type gene(geneSEXP);
    Rcpp::traits::input_parameter< std::string >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(snpsC(df, gene, index));
    return rcpp_result_gen;
END_RCPP
}
// variantnameC
std::string variantnameC(List dels, List ins, List snp);
RcppExport SEXP _AlleleProfileR_variantnameC(SEXP delsSEXP, SEXP insSEXP, SEXP snpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dels(delsSEXP);
    Rcpp::traits::input_parameter< List >::type ins(insSEXP);
    Rcpp::traits::input_parameter< List >::type snp(snpSEXP);
    rcpp_result_gen = Rcpp::wrap(variantnameC(dels, ins, snp));
    return rcpp_result_gen;
END_RCPP
}
// generalpastelongC
std::string generalpastelongC(std::vector <std::string> x, std::string sep);
RcppExport SEXP _AlleleProfileR_generalpastelongC(SEXP xSEXP, SEXP sepSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector <std::string> >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::string >::type sep(sepSEXP);
    rcpp_result_gen = Rcpp::wrap(generalpastelongC(x, sep));
    return rcpp_result_gen;
END_RCPP
}
// mathandC
bool mathandC(LogicalVector x);
RcppExport SEXP _AlleleProfileR_mathandC(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mathandC(x));
    return rcpp_result_gen;
END_RCPP
}
// mathorC
bool mathorC(LogicalVector x);
RcppExport SEXP _AlleleProfileR_mathorC(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mathorC(x));
    return rcpp_result_gen;
END_RCPP
}
// mathintersectC
bool mathintersectC(int a, int b, int x, int y);
RcppExport SEXP _AlleleProfileR_mathintersectC(SEXP aSEXP, SEXP bSEXP, SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(mathintersectC(a, b, x, y));
    return rcpp_result_gen;
END_RCPP
}
// mathrangeC
IntegerVector mathrangeC(int start, int stop, int step);
RcppExport SEXP _AlleleProfileR_mathrangeC(SEXP startSEXP, SEXP stopSEXP, SEXP stepSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    Rcpp::traits::input_parameter< int >::type stop(stopSEXP);
    Rcpp::traits::input_parameter< int >::type step(stepSEXP);
    rcpp_result_gen = Rcpp::wrap(mathrangeC(start, stop, step));
    return rcpp_result_gen;
END_RCPP
}
// checknegC
std::vector < int > checknegC(std::vector < int > val);
RcppExport SEXP _AlleleProfileR_checknegC(SEXP valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector < int > >::type val(valSEXP);
    rcpp_result_gen = Rcpp::wrap(checknegC(val));
    return rcpp_result_gen;
END_RCPP
}
// iswithincutrangeC
bool iswithincutrangeC(std::vector < int > cutpos, int range, int pos, int length, int atgloc);
RcppExport SEXP _AlleleProfileR_iswithincutrangeC(SEXP cutposSEXP, SEXP rangeSEXP, SEXP posSEXP, SEXP lengthSEXP, SEXP atglocSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector < int > >::type cutpos(cutposSEXP);
    Rcpp::traits::input_parameter< int >::type range(rangeSEXP);
    Rcpp::traits::input_parameter< int >::type pos(posSEXP);
    Rcpp::traits::input_parameter< int >::type length(lengthSEXP);
    Rcpp::traits::input_parameter< int >::type atgloc(atglocSEXP);
    rcpp_result_gen = Rcpp::wrap(iswithincutrangeC(cutpos, range, pos, length, atgloc));
    return rcpp_result_gen;
END_RCPP
}
// iswithincdsC
bool iswithincdsC(bool atgfound, bool stopfound, int pos, int length, int seqalignpos, int atgloc, int stoploc);
RcppExport SEXP _AlleleProfileR_iswithincdsC(SEXP atgfoundSEXP, SEXP stopfoundSEXP, SEXP posSEXP, SEXP lengthSEXP, SEXP seqalignposSEXP, SEXP atglocSEXP, SEXP stoplocSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type atgfound(atgfoundSEXP);
    Rcpp::traits::input_parameter< bool >::type stopfound(stopfoundSEXP);
    Rcpp::traits::input_parameter< int >::type pos(posSEXP);
    Rcpp::traits::input_parameter< int >::type length(lengthSEXP);
    Rcpp::traits::input_parameter< int >::type seqalignpos(seqalignposSEXP);
    Rcpp::traits::input_parameter< int >::type atgloc(atglocSEXP);
    Rcpp::traits::input_parameter< int >::type stoploc(stoplocSEXP);
    rcpp_result_gen = Rcpp::wrap(iswithincdsC(atgfound, stopfound, pos, length, seqalignpos, atgloc, stoploc));
    return rcpp_result_gen;
END_RCPP
}
// cigarsubsC
std::vector< std::string > cigarsubsC(std::string cigar);
RcppExport SEXP _AlleleProfileR_cigarsubsC(SEXP cigarSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type cigar(cigarSEXP);
    rcpp_result_gen = Rcpp::wrap(cigarsubsC(cigar));
    return rcpp_result_gen;
END_RCPP
}
// cigarsubstail
std::string cigarsubstail(std::vector < std::string> cigarsubs);
RcppExport SEXP _AlleleProfileR_cigarsubstail(SEXP cigarsubsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector < std::string> >::type cigarsubs(cigarsubsSEXP);
    rcpp_result_gen = Rcpp::wrap(cigarsubstail(cigarsubs));
    return rcpp_result_gen;
END_RCPP
}
// codonsC
std::vector< std::string > codonsC(std::string seq, int start, int stop);
RcppExport SEXP _AlleleProfileR_codonsC(SEXP seqSEXP, SEXP startSEXP, SEXP stopSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    Rcpp::traits::input_parameter< int >::type stop(stopSEXP);
    rcpp_result_gen = Rcpp::wrap(codonsC(seq, start, stop));
    return rcpp_result_gen;
END_RCPP
}
// codonselectC
std::string codonselectC(std::string seq, int def, int select, int shift);
RcppExport SEXP _AlleleProfileR_codonselectC(SEXP seqSEXP, SEXP defSEXP, SEXP selectSEXP, SEXP shiftSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< int >::type def(defSEXP);
    Rcpp::traits::input_parameter< int >::type select(selectSEXP);
    Rcpp::traits::input_parameter< int >::type shift(shiftSEXP);
    rcpp_result_gen = Rcpp::wrap(codonselectC(seq, def, select, shift));
    return rcpp_result_gen;
END_RCPP
}
// cigarsubsdeletionsC
NumericVector cigarsubsdeletionsC(std::vector< std::string > cigarsubs, int end, int start, std::string type);
RcppExport SEXP _AlleleProfileR_cigarsubsdeletionsC(SEXP cigarsubsSEXP, SEXP endSEXP, SEXP startSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector< std::string > >::type cigarsubs(cigarsubsSEXP);
    Rcpp::traits::input_parameter< int >::type end(endSEXP);
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    Rcpp::traits::input_parameter< std::string >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(cigarsubsdeletionsC(cigarsubs, end, start, type));
    return rcpp_result_gen;
END_RCPP
}
// cigarsubsinsertionsC
NumericVector cigarsubsinsertionsC(std::vector< std::string > cigarsubs, int end, int start, std::string type);
RcppExport SEXP _AlleleProfileR_cigarsubsinsertionsC(SEXP cigarsubsSEXP, SEXP endSEXP, SEXP startSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector< std::string > >::type cigarsubs(cigarsubsSEXP);
    Rcpp::traits::input_parameter< int >::type end(endSEXP);
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    Rcpp::traits::input_parameter< std::string >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(cigarsubsinsertionsC(cigarsubs, end, start, type));
    return rcpp_result_gen;
END_RCPP
}
// cigarsubsSHC
NumericVector cigarsubsSHC(std::vector< std::string > cigarsubs, int end, int start);
RcppExport SEXP _AlleleProfileR_cigarsubsSHC(SEXP cigarsubsSEXP, SEXP endSEXP, SEXP startSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector< std::string > >::type cigarsubs(cigarsubsSEXP);
    Rcpp::traits::input_parameter< int >::type end(endSEXP);
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    rcpp_result_gen = Rcpp::wrap(cigarsubsSHC(cigarsubs, end, start));
    return rcpp_result_gen;
END_RCPP
}
// iswithininsertionC
bool iswithininsertionC(std::vector< std::string > cigarsubs, int pos);
RcppExport SEXP _AlleleProfileR_iswithininsertionC(SEXP cigarsubsSEXP, SEXP posSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector< std::string > >::type cigarsubs(cigarsubsSEXP);
    Rcpp::traits::input_parameter< int >::type pos(posSEXP);
    rcpp_result_gen = Rcpp::wrap(iswithininsertionC(cigarsubs, pos));
    return rcpp_result_gen;
END_RCPP
}
// readdeptc
DataFrame readdeptc(DataFrame df, IntegerVector range);
RcppExport SEXP _AlleleProfileR_readdeptc(SEXP dfSEXP, SEXP rangeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type range(rangeSEXP);
    rcpp_result_gen = Rcpp::wrap(readdeptc(df, range));
    return rcpp_result_gen;
END_RCPP
}
// seglogoC
DataFrame seglogoC(DataFrame df, DataFrame frame);
RcppExport SEXP _AlleleProfileR_seglogoC(SEXP dfSEXP, SEXP frameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type frame(frameSEXP);
    rcpp_result_gen = Rcpp::wrap(seglogoC(df, frame));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_AlleleProfileR_binassignC", (DL_FUNC) &_AlleleProfileR_binassignC, 3},
    {"_AlleleProfileR_binassignChimericC", (DL_FUNC) &_AlleleProfileR_binassignChimericC, 2},
    {"_AlleleProfileR_inssitesC", (DL_FUNC) &_AlleleProfileR_inssitesC, 1},
    {"_AlleleProfileR_readposendC", (DL_FUNC) &_AlleleProfileR_readposendC, 1},
    {"_AlleleProfileR_seqinsertedC", (DL_FUNC) &_AlleleProfileR_seqinsertedC, 3},
    {"_AlleleProfileR_bamQCC", (DL_FUNC) &_AlleleProfileR_bamQCC, 1},
    {"_AlleleProfileR_mergedSanityCheckC", (DL_FUNC) &_AlleleProfileR_mergedSanityCheckC, 1},
    {"_AlleleProfileR_getreferenceC", (DL_FUNC) &_AlleleProfileR_getreferenceC, 4},
    {"_AlleleProfileR_checkatgC", (DL_FUNC) &_AlleleProfileR_checkatgC, 2},
    {"_AlleleProfileR_checkstopC", (DL_FUNC) &_AlleleProfileR_checkstopC, 2},
    {"_AlleleProfileR_mutreferenceC", (DL_FUNC) &_AlleleProfileR_mutreferenceC, 4},
    {"_AlleleProfileR_snpsC", (DL_FUNC) &_AlleleProfileR_snpsC, 3},
    {"_AlleleProfileR_variantnameC", (DL_FUNC) &_AlleleProfileR_variantnameC, 3},
    {"_AlleleProfileR_generalpastelongC", (DL_FUNC) &_AlleleProfileR_generalpastelongC, 2},
    {"_AlleleProfileR_mathandC", (DL_FUNC) &_AlleleProfileR_mathandC, 1},
    {"_AlleleProfileR_mathorC", (DL_FUNC) &_AlleleProfileR_mathorC, 1},
    {"_AlleleProfileR_mathintersectC", (DL_FUNC) &_AlleleProfileR_mathintersectC, 4},
    {"_AlleleProfileR_mathrangeC", (DL_FUNC) &_AlleleProfileR_mathrangeC, 3},
    {"_AlleleProfileR_checknegC", (DL_FUNC) &_AlleleProfileR_checknegC, 1},
    {"_AlleleProfileR_iswithincutrangeC", (DL_FUNC) &_AlleleProfileR_iswithincutrangeC, 5},
    {"_AlleleProfileR_iswithincdsC", (DL_FUNC) &_AlleleProfileR_iswithincdsC, 7},
    {"_AlleleProfileR_cigarsubsC", (DL_FUNC) &_AlleleProfileR_cigarsubsC, 1},
    {"_AlleleProfileR_cigarsubstail", (DL_FUNC) &_AlleleProfileR_cigarsubstail, 1},
    {"_AlleleProfileR_codonsC", (DL_FUNC) &_AlleleProfileR_codonsC, 3},
    {"_AlleleProfileR_codonselectC", (DL_FUNC) &_AlleleProfileR_codonselectC, 4},
    {"_AlleleProfileR_cigarsubsdeletionsC", (DL_FUNC) &_AlleleProfileR_cigarsubsdeletionsC, 4},
    {"_AlleleProfileR_cigarsubsinsertionsC", (DL_FUNC) &_AlleleProfileR_cigarsubsinsertionsC, 4},
    {"_AlleleProfileR_cigarsubsSHC", (DL_FUNC) &_AlleleProfileR_cigarsubsSHC, 3},
    {"_AlleleProfileR_iswithininsertionC", (DL_FUNC) &_AlleleProfileR_iswithininsertionC, 2},
    {"_AlleleProfileR_readdeptc", (DL_FUNC) &_AlleleProfileR_readdeptc, 2},
    {"_AlleleProfileR_seglogoC", (DL_FUNC) &_AlleleProfileR_seglogoC, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_AlleleProfileR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
